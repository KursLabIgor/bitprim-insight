language: csharp  
sudo: required  
dist: trusty

branches:
  only:
  - master
  - dev

configuration:
- Release

env:  
  - CLI_VERSION=latest
addons:
  apt:
    packages:
    - gettext
    - libcurl4-openssl-dev
    - libicu-dev
    - libssl-dev
    - libunwind8
    - zlib1g

linux: &linux
   os: linux
   sudo: required
   language: python
   python: "3.6"

osx: &osx
   os: osx
   language: generic

matrix:
   include:
      - <<: *linux
        compiler: gcc 

      - <<: *linux
        compiler: gcc 

      - <<: *osx
        osx_image: xcode8.3
        env: TRAVIS_PYTHON_VERSION=3.6 PYTHON_FULL_VERSION=3.6.2

before_install:
  - |
    if test "$TRAVIS_OS_NAME" == "osx"; then
      ln -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/;
      ln -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/;
    else
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
    fi

install:
  # Install Conan
  - |
    # Install Conan    
    if [[ "${TRAVIS_OS_NAME}" != "linux" ]]; then
      brew update || brew update
      brew outdated pyenv || brew upgrade pyenv
      brew install pyenv-virtualenv
      brew install cmake || true
      if which pyenv > /dev/null; then
          eval "$(pyenv init -)"
          eval "$(pyenv virtualenv-init -)" 
      fi
      pyenv install --list
      pyenv install $PYTHON_FULL_VERSION
      pyenv virtualenv $PYTHON_FULL_VERSION conan
      pyenv rehash
      pyenv activate conan
    fi
    pip install conan_package_tools --upgrade
    pip install conan --upgrade
    pip install wheel --upgrade
    pip install twine --upgrade
    conan user
    # Install .NET Core 2.x
    if test "$TRAVIS_OS_NAME" == "osx"; then
      curl -O https://download.microsoft.com/download/D/7/2/D725E47F-A4F1-4285-8935-A91AE2FCC06A/dotnet-sdk-2.0.3-osx-gs-x64.pkg
      sudo installer -pkg dotnet-sdk-2.0.3-osx-gs-x64.pkg -target /
      sudo update_dyld_shared_cache
      ln -s /usr/local/share/dotnet/dotnet /usr/local/bin/
    else
      curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
      sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
      sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-trusty-prod trusty main" > /etc/apt/sources.list.d/dotnetdev.list'
      sudo apt-get update -y
      sudo apt-get install dotnet-sdk-2.0.2 -y
      sudo apt-get install -qq g++-4.9
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 90
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/g++-4.9 90
      gcc --version
      g++ --version
      sudo ldconfig

  script:
    - |
      dotnet build /property:Platform=x64 -c Release -f netcoreapp2.0 -v normal
